name: Build deb

on:
  push:
  pull_request:
  workflow_dispatch:
    inputs:
      sdk_version:
        description: "iOS SDK Version"
        default: "16.5"
        required: true
        type: string
      target_version:
        description: "Target iOS Version"
        default: "14.0"
        required: true
        type: string

jobs:
  build:
    runs-on: macos-latest
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true

    steps:
      # 检出代码
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          submodules: true
          ref: ${{ github.event.inputs.commit_id || github.ref }}

      # 检查缓存
      - name: Check Cache
        run: |
          echo upstream_heads=$(git ls-remote https://github.com/roothide/theos | head -n 1 | cut -f 1)-$(git ls-remote https://github.com/theos/sdks | head -n 1 | cut -f 1) >> $GITHUB_ENV

      # 使用缓存
      - name: Use Cache
        id: cache
        uses: actions/cache@v4
        with:
          path: ${{ github.workspace }}/theos
          key: ${{ runner.os }}-${{ env.upstream_heads }}

      # 准备 Theos 环境
      - name: Prepare Theos
        uses: huami1314/theos-action@main

      # 添加 GNU Make 到 PATH
      - name: Setup GNU Make
        run: |
          echo "$(brew --prefix make)/libexec/gnubin" >> $GITHUB_PATH

      # 安装依赖
      - name: Install Dependencies
        run: brew install make dpkg ldid

      

      # 构建 DEB 包
      - name: Build Package
        run: |
          rm -f packages/*
          make package FINALPACKAGE=1 -j$(sysctl -n hw.ncpu)
          make package THEOS_PACKAGE_SCHEME=rootless FINALPACKAGE=1 -j$(sysctl -n hw.ncpu)
          make package THEOS_PACKAGE_SCHEME=roothide FINALPACKAGE=1 -j$(sysctl -n hw.ncpu)
        env:
          THEOS: ${{ github.workspace }}/theos

      # 调试输出
      - name: Debug Package Directory
        run: ls -R ${{ github.workspace }}/packages

      # 上传 DEB 包
      - name: Upload Deb Packages
        uses: actions/upload-artifact@v4
        with:
          name: BHTwitter_${{ env.VERSION }}
          path: ${{ github.workspace }}/packages/*.deb
          if-no-files-found: warn

      # 可选：创建 GitHub Release
      - name: Create Draft Release
        if: ${{ inputs.create_release }}
        id: create_release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.VERSION }}
          name: v${{ env.VERSION }} - BHTwitter
          files: ${{ github.workspace }}/packages/*.deb
          draft: true